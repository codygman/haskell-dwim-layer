(when (configuration-layer/package-usedp 'haskell-dwim-layer)
  (defun repl-and-load-json-file-into-str-var (fp)
    (interactive)
    (bring-wait-haskell-prompt)
    (goto-char (point-max))
    (insert (concat "bs <- BS.readFile \"" fp "\""))
    (haskell-interactive-mode-return))

  (defun repl-and-load-hs-file (fp)
    (interactive)
    (bring-wait-haskell-prompt)
    (goto-char (point-max))
    (insert (concat ":load " fp))
    (haskell-interactive-mode-return))


  (defun haskell-repl-dwim()
    (interactive)
    (let ((calling-buf-filename buffer-file-name))
      (if (string-suffix-p ".json" calling-buf-filename)
          (repl-and-load-json-file-into-str-var calling-buf-filename)
        (if (string-suffix-p ".hs" calling-buf-filename)
            (repl-and-load-hs-file calling-buf-filename)
          (haskell-interactive-bring)))))
  )
